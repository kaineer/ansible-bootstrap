- name: Setup core
  git_config:
    name: "core.{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  loop:
    - { name: 'editor', value: 'vim' }
# link: https://git-scm.com/docs/git-config#Documentation/git-config.txt-corequotePath
#
# Commands that output paths (e.g. ls-files, diff), will quote "unusual" characters in the 
# pathname by enclosing the pathname in double-quotes and escaping those characters with 
# backslashes in the same way C escapes control characters (e.g. \t for TAB, \n for LF, 
# \\ for backslash) or bytes with values larger than 0x80 (e.g. octal \302\265 for "micro" 
# in UTF-8). If this variable is set to false, bytes higher than 0x80 are not considered 
# "unusual" any more. Double-quotes, backslash and control characters are always escaped 
# regardless of the setting of this variable. A simple space character is not considered 
# "unusual". Many commands can output pathnames completely verbatim using the -z option. 
# The default value is true.
#
# NOTE: value is set as string, because when we use boolean
#   ansible sets value as 'False'. And I'm not sure, whether
#   git will interpret 'False' as it should be interpreted.
    - { name: 'quotepath', value: 'false' }

- name: Setup commit configuration
  git_config:
    name: "config.{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  loop:
    - { name: 'name', value: 'Sergey Kluchkovsky' }
    - { name: 'email', value: 'kaineer@gmail.com' }

- name: Setup aliases
  git_config:
    name: "alias.{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  loop:
    - { name: 'ci', value: 'commit' }
    - { name: 'co', value: 'checkout' }
    - { name: 'st', value: 'status' }
    - { name: 'lg', value: 'log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short' }
